// Code generated by go-bindata.
// sources:
// templates/Dockerfile.tmpl
// templates/instrumentation.tmpl
// templates/logging.tmpl
// templates/service.tmpl
// templates/srv-main.tmpl
// templates/transport.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd7\x57\xd0\x22\x02\x70\x01\xd5\xb9\xbb\xfa\xb9\x06\x39\x86\xb8\xba\x28\xb8\x79\xfa\xb8\x2a\xe8\xea\x2a\xb8\xa6\x64\x96\x28\x24\x16\x2b\xe4\xa5\x26\xa7\x16\x17\x27\x16\x55\x82\x94\x39\x28\x54\x57\x2b\x94\x64\xe6\xa6\x16\x97\x24\xe6\x16\x28\xd4\xd6\x72\x11\x6b\x87\x5b\x90\xbf\xaf\x42\x72\x6a\x5e\x49\x69\x51\x65\x4e\x66\x5e\xb6\x7e\x72\xa2\x6e\x72\x6a\x51\x49\xb1\x02\x57\xb8\x7f\x90\xb7\x8b\x67\x90\x82\x3e\x97\xa3\x8b\x8b\x42\x6e\x62\x66\x1e\x90\xe9\xec\xeb\xa2\x10\xad\xa4\x0f\xe2\x29\xc5\x72\x01\x02\x00\x00\xff\xff\x0b\x22\xaf\xa3\xca\x00\x00\x00")

func templatesDockerfileTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTmpl,
		"templates/Dockerfile.tmpl",
	)
}

func templatesDockerfileTmpl() (*asset, error) {
	bytes, err := templatesDockerfileTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.tmpl", size: 202, mode: os.FileMode(420), modTime: time.Unix(1460304884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInstrumentationTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x61\x6f\x9b\x30\x10\xfd\x8c\x7f\xc5\x0d\x69\x12\x4c\x2d\xd1\xbe\x56\xaa\xb4\xaa\xa5\x5b\xb5\x2e\x9d\xda\x6c\xfb\x4c\xe0\x48\xac\x82\xcd\x6c\x13\x94\x65\xfc\xf7\x9d\xed\x24\x85\x36\x99\xfa\xa1\x91\x08\xc9\xf3\xdd\xf3\xf1\xde\xc3\x93\x09\x7c\x78\x9b\x0f\x23\xaa\xcf\xe9\x34\xbd\xbf\x98\xa5\x57\x70\x7d\x73\x9b\xc2\xe9\x29\x5c\xdd\xc1\xf4\x6e\x06\xe9\xd5\xcd\x0c\x7e\x88\x0a\xb5\x86\xbc\xd5\x46\xd6\xc0\x85\x36\xaa\xad\x51\x98\xcc\x70\x29\x80\x6b\x50\xf8\xbb\xe5\x0a\x0b\x4b\xf5\x09\x36\x1b\x30\xbc\x46\x6d\xb2\xba\x81\xbe\xb7\xe0\xf7\x4c\x65\x35\x1a\x54\xfc\x0f\x16\xd0\x71\xb3\x3c\x23\xd8\xae\xa4\xa2\x68\x24\x17\x66\x4a\xeb\x70\x6e\x7b\x93\x11\xe4\xfb\xef\x69\x03\x22\x1c\x14\x0d\x91\x51\xcd\x6c\xdd\x3c\xab\x71\xc8\xae\x46\x37\x52\x68\x1c\x11\x0d\xa0\x71\xd5\x88\x6a\x00\xf9\xaa\xb7\x92\x9f\x35\x59\xfe\x98\x2d\x10\xea\x8c\x0b\xc6\x78\xdd\x48\x65\x20\x62\x41\x58\xd6\x26\xa4\x9b\x15\x33\x64\xf4\x63\x41\xba\xb5\xf3\x24\x97\xf5\x64\x21\x4f\x1f\xb9\x99\xd8\x8b\x74\x55\x3c\xd7\x21\x8b\x19\x33\x76\xbc\x67\x06\x7d\xe3\x45\x51\x61\x97\x29\x04\x8b\xe7\x06\x36\x2c\x50\x5e\x9a\x4b\xd9\x0a\x03\x00\x5b\x8e\xc4\xfd\x47\xb5\x5f\xbf\xcd\x0c\x8a\x7c\xbd\x5f\x9f\xd1\x28\x5f\x38\xc5\x60\x41\x7e\x32\x00\x92\xe1\xa2\x28\x8e\x25\xc3\x15\xec\xbe\x0e\x38\xfb\x80\x6a\xc5\x73\x64\x3d\x63\x65\x2b\x72\x88\xea\xee\xf8\xf0\x31\x5c\x66\x55\x75\x80\x25\x7a\x19\x87\x03\xee\xc7\x10\xc9\xd6\x34\xad\x79\x61\x67\xdf\x9f\x00\x2a\x65\x2f\xa9\x62\x2b\x4e\x81\x25\x2a\xb0\x23\x45\x73\x5c\x70\xe1\xe2\xec\x9e\xdd\x2e\x3b\xb5\x96\xb2\xb8\xe6\x58\x15\x70\x76\xbe\x17\xc7\x01\x9b\xaf\xb8\x3e\x83\xd0\x97\x84\x27\xf0\x33\xab\x5a\x24\xe0\xc8\xf0\x61\xcf\x82\xc0\xed\xfc\x5f\x3a\xaa\x78\xe2\xa2\x58\x24\x0f\x8d\x22\x92\x32\x0a\xdf\xaf\x42\x37\x7e\x6c\x89\xea\x2e\x19\x1a\x9b\xfc\xa2\xc0\x44\x83\x69\x63\x8f\x3c\xed\x17\x27\x64\x5f\xf4\x31\x1e\xf5\x6e\x4d\x7f\x4d\xf7\xdd\x5c\x93\x87\x18\x39\x81\x1e\xb8\xc8\xd1\x2b\x16\xc7\x24\xd3\x3e\x1e\xa4\xa0\x74\x85\x3e\x16\x39\x49\xa1\xa1\x94\x0a\xcc\x12\x8f\x64\x67\xdb\xbe\xbb\x05\xbd\xdf\x62\x2a\xbb\x88\xb8\x09\xf6\x66\x7a\xe7\x48\xb3\x2e\x39\x9e\xaf\xe4\xf5\xc1\x21\x21\x78\xe9\x38\xdf\x9d\x83\xe0\x95\xb3\x9b\xca\x08\x1c\x1f\x01\x7f\x41\xd0\x9c\x2b\x34\x3e\x5d\xe0\x06\x55\x68\x5a\x25\x20\xf4\x8e\xf8\x4e\xac\xb4\x3b\x30\x06\xeb\x07\xce\x13\xd8\xf4\xc3\x1e\x51\xd8\x96\x80\xde\x8b\x60\xdb\xb3\x7b\x5c\x9a\xc9\xbe\x2e\xff\x02\x00\x00\xff\xff\x66\x94\x38\xb4\xfe\x05\x00\x00")

func templatesInstrumentationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInstrumentationTmpl,
		"templates/instrumentation.tmpl",
	)
}

func templatesInstrumentationTmpl() (*asset, error) {
	bytes, err := templatesInstrumentationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/instrumentation.tmpl", size: 1534, mode: os.FileMode(420), modTime: time.Unix(1460304957, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoggingTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x51\x6b\xdb\x30\x10\x7e\xae\x7e\xc5\x4d\x4f\xf6\x48\x9c\xf7\x42\x61\x63\xf1\x46\x21\x4b\x47\x9a\x3d\x0f\xc5\xbe\x38\x22\xb6\xe4\xc9\x72\xcd\x96\xf9\xbf\xef\x24\x39\x60\x13\x17\x0a\x0d\xd8\xc8\x77\x9f\x4e\xdf\xf7\xdd\x29\xab\x15\x7c\x7c\xe7\x8f\x51\x8d\x6f\xe9\x36\xdd\x7d\xde\xa7\x6b\xf8\xfa\xb8\x49\x61\xb9\x84\xf5\x13\x6c\x9f\xf6\x90\xae\x1f\xf7\xf0\x53\x95\xd8\x34\xb0\xc3\xa6\xd6\xaa\x41\xb0\x7f\x6a\x04\xd9\x80\xd2\x16\x94\xb0\xf2\x05\x5d\x8d\x4f\x70\xb9\x80\x95\x15\x36\x56\x54\x35\xf4\xbd\x0b\xfe\x10\x46\x54\x68\xd1\xc8\xbf\x98\x43\x27\xed\xe9\x9e\xc2\x2e\x93\xaa\xbc\xd6\x52\xd9\x2d\xe5\xe1\xc1\xed\x4d\x26\xa1\xb0\x7f\x87\xbf\x5b\x2a\x38\x02\x8d\x23\x13\xcc\xde\xb1\x9a\x60\x7c\xe4\x8a\x09\xdc\x27\x85\x46\xa1\x29\x6a\x52\x6a\x14\x0a\xa8\x77\x1b\xce\x6a\x91\x9d\x45\x81\x50\x09\xa9\x18\x93\x55\xad\x8d\x85\x88\xdd\x71\x67\x1f\x67\xb4\x28\xc8\xa9\xf6\x90\x64\xba\x5a\x15\x7a\x79\x96\x76\xe5\x9e\x52\x17\x9c\xc5\x8c\xf9\x06\xd0\x47\x21\x55\xf1\x5d\xe6\x79\x89\x9d\x30\x08\x8d\x35\x6d\x66\xe1\xc2\xee\x5c\x0e\x8d\x83\x24\x1b\xbf\x64\x30\xe7\xf0\x33\x9a\x17\x99\x21\xeb\x19\x73\xc2\x36\xa1\x22\xe4\x98\xe9\xb6\x2e\xa9\x61\x47\xa3\x2b\xb0\x27\x2a\x1d\x90\xae\xa2\xcc\xd8\xb1\x55\x19\x44\x55\x77\xcb\x21\x86\x2f\xa2\x2c\x67\x8e\x8a\x6e\x7b\x37\xd3\xaa\x18\x22\xdd\xda\xba\xb5\x73\xde\x2f\x00\x8d\x71\x8f\x36\x31\x89\x04\xe2\x79\x24\x91\x8e\x4c\x74\x40\xe2\xe1\xa7\x2f\xd9\xd3\x2b\xe4\x01\x7e\x51\x17\xab\x2e\x09\x76\x38\x2b\x22\x1f\xe6\x34\x92\x27\x9d\xf3\x05\xf0\x57\xe8\xf2\x45\x00\x4a\x45\x64\x08\x77\xcb\x3e\x00\xc8\x35\xba\x26\xe9\x3d\x8d\x73\xd3\x9a\xe1\x6a\xf0\x19\xf2\xdc\x5d\x98\xda\xd0\x09\xe2\x50\x22\x9c\xd0\x60\x38\x21\xe8\xa5\x23\xc2\x62\x38\x97\x54\x72\xaf\x77\xf8\xb6\x5a\x9f\x29\xe0\x05\x3e\x4b\x95\x61\x50\x1c\x87\x74\x4c\xef\x3e\xf2\xc9\xad\xee\xa2\x98\x46\x04\xae\xf5\xbc\x69\xde\x85\xd7\x07\x20\x79\x7b\xd3\xdc\x51\xf2\xe8\x8b\x7e\x78\x00\x25\x4b\xef\x34\xe1\x28\x38\xd5\xfc\x6f\xf8\x6f\xb0\xc1\x00\xf0\x4c\x0d\xda\xd6\x28\xe0\x41\x5c\xd8\x89\x65\xe3\xaf\xd6\x28\x3f\x63\x20\x5c\xfa\xf1\x1e\x95\x87\x2d\xbd\x93\x3a\xec\xba\x2a\x26\x56\x7e\xa4\xd9\xff\x00\x00\x00\xff\xff\x0e\xd8\xfc\xbe\x1e\x05\x00\x00")

func templatesLoggingTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoggingTmpl,
		"templates/logging.tmpl",
	)
}

func templatesLoggingTmpl() (*asset, error) {
	bytes, err := templatesLoggingTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/logging.tmpl", size: 1310, mode: os.FileMode(420), modTime: time.Unix(1460304979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x6f\xd3\x40\x10\x3d\xb3\xbf\x62\xd4\x53\x52\xf5\xe3\x5e\xa9\x12\x11\x35\xa8\x52\x54\xa1\x90\x0b\xc7\xc5\x1e\xb7\x03\xf6\xda\xec\x8e\x5b\x81\xc9\x7f\x67\xc6\x5e\x53\x2f\xa4\x52\x88\x9a\x53\xf4\xe6\xcd\x9b\x79\xcf\x63\x5f\x5e\xc2\xe9\x71\x3f\x23\xad\x1f\x57\x9b\xed\xed\x6a\xbd\xfe\x0c\x1f\xb2\xbb\x6c\xb3\xda\x66\x37\xf0\xfe\x76\x9d\xc1\xf9\x39\x64\x05\x31\xf0\x03\x02\xb9\x82\x72\xcb\x58\x40\xc0\x9c\xa9\x71\x41\x5b\xdf\x42\xdf\x03\x53\x8d\x81\x6d\xdd\xc2\x6e\x37\xe8\x59\x6f\x6b\x64\xf4\xf4\x53\xe8\x4f\xc4\x0f\x57\x02\x6b\x25\x73\x45\xdb\x90\xe3\x3b\xa9\xc3\xb5\xf6\x5e\x24\xd0\xd8\xbf\xc1\xef\x9d\x08\xce\x48\x73\x24\xe1\x6c\x7f\xb4\x7f\x71\x06\x64\xe2\x84\x56\xf6\xc4\x44\x68\x06\xa5\xac\x44\x6a\x06\x8d\xac\x23\xe3\x3d\x35\xa6\xb5\xf9\x37\x7b\x8f\x50\x5b\x72\xc6\xb0\x4a\xee\xf1\xfd\x09\xfd\x23\xe5\x1a\xb3\xe4\x56\x5a\xf9\xd7\x9b\x77\xb6\xaa\xf6\x50\x61\xf1\xaf\xdd\xe5\x04\x26\x8b\x9f\x01\x7a\xdf\xf8\xa5\xd9\xc5\xc1\x21\x4e\x09\xec\xbb\x9c\x7b\x81\xa5\x8b\xca\x54\xed\x17\x38\xcb\xf4\x88\x3c\x8a\xc0\x40\xc2\x2a\x4c\x51\xdc\x60\x49\x0e\x87\xa3\x08\x7f\xb6\x6e\x3b\x8e\xaa\xaa\xe7\x1a\x8e\x22\xa0\x2a\xcf\xae\xd3\xad\xa7\x8e\xde\xa8\xee\xaa\x28\x44\x68\xd0\xfd\x1a\x1a\x37\x15\xb1\xc2\x1a\x1d\x07\x29\x58\x4e\xa6\x3e\x51\x55\x41\x27\x7b\xd9\x00\xad\xf5\x0c\x4d\x39\xd4\xfd\x38\xe4\x42\x45\xf5\xf0\xc4\xbe\x3a\x70\x85\x1a\x78\x76\x3c\x8b\xea\x08\xcb\x4d\xc7\x07\x7b\x4e\x1e\xca\x6b\x98\xf6\xc8\x9d\x77\xf0\x45\x4e\x4b\xbb\x49\x88\x3e\x4e\x79\xc1\x75\xd9\xb9\x1c\x16\x51\x64\x09\x2f\x9c\xd6\x62\x7c\x90\xff\x7b\x5f\xea\xe5\xa0\x58\x61\x8a\xed\xea\x1a\x4e\x4e\x92\x94\x93\xda\xbe\xd8\xe2\xb5\x46\x43\x69\x74\xfa\x6e\x41\xd5\xdc\x53\x3e\xdd\x40\x74\x3a\x7e\x77\x8c\x79\x13\x13\x1b\x47\x9c\x81\xa3\x4a\x5f\x8a\xdf\x01\x00\x00\xff\xff\xcc\x09\x19\x52\x38\x05\x00\x00")

func templatesServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceTmpl,
		"templates/service.tmpl",
	)
}

func templatesServiceTmpl() (*asset, error) {
	bytes, err := templatesServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service.tmpl", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1460609982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSrvMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x61\x6b\xf3\x36\x10\xfe\x1c\xff\x8a\xc3\x30\x70\x47\x6a\x7f\x0f\x14\xd6\xad\x59\x5b\x96\xb7\x2d\x89\x5f\xc6\x18\x23\xb8\x96\xe2\x88\xc6\x92\x27\xc9\x69\xb3\x2c\xff\x7d\xcf\x39\x76\x1b\x37\xc9\x60\xf0\x7e\x58\xa0\x89\x7c\xf7\xdc\xa3\xd3\x73\xa7\x73\x93\x84\xbe\xff\x16\x9f\x00\x44\x4f\xd7\xd3\xf4\xfe\x7a\x32\xf9\x8d\x6e\xc7\x0f\xe3\xe9\x75\x3a\xbe\xa1\x9f\xef\x27\x63\xba\xbc\xa4\x9b\x47\x7a\x78\x4c\x69\x7c\x73\x9f\x52\xad\x57\xd2\x39\xca\x6b\xe7\x4d\x49\x4a\x3b\x6f\xeb\x52\x6a\x9f\x79\x65\x34\x13\xfd\x40\xdb\x2d\x79\x55\x4a\xe7\xb3\xb2\xa2\xdd\xae\x61\xcf\x6c\x56\x4a\x2f\xad\xfa\x4b\x0a\x7a\x55\x7e\x39\x82\x99\x3d\x63\x2d\x2a\xa3\xb4\x7f\x80\x9f\xae\x38\x36\xee\x99\xf6\xf1\x53\xf9\x67\x0d\xc2\x03\xd0\xa1\xa5\x87\x49\x37\xd5\x27\x4c\x63\xe9\x30\xae\x32\xda\xc9\x1e\xd1\x81\xa9\x8f\xea\x51\x1d\x98\xf6\xa8\x6f\x23\x7d\x50\x65\xf9\x4b\x56\x48\x2a\x33\xa5\x83\x40\x95\x95\xb1\x9e\xa2\x60\x10\x2e\x4a\x1f\xe2\x47\x4b\x9f\x2c\xbd\xaf\x78\x6d\x1c\x7f\xb3\xb8\x61\x80\x45\x01\x1d\xeb\xe7\x38\x37\x65\x52\x98\xcb\x17\xe5\x13\xfe\x5b\x99\x22\x3c\xeb\x44\x11\xac\xca\x99\x06\x4f\x95\x35\x78\x5e\xca\xda\xd1\xbf\xc3\x93\x0f\x24\x22\x39\x1b\x6f\x33\xed\x9a\x54\xcf\x44\xbe\x03\xba\xe4\x9d\x17\x67\xf6\xfb\x30\x27\xf9\x4a\xa1\x97\xe6\x85\x59\x65\xba\xe8\xef\x1a\xee\x8d\xb1\xb1\x45\xf2\x96\xb0\x2a\xb9\xd1\x5e\xbe\x41\xa4\x8b\x20\x58\xd4\x3a\x6f\x24\x8c\x2e\x68\x1b\x0c\x72\xff\x46\xa3\x2b\x6a\x11\xf1\x8f\xd0\xb8\xb0\xa6\xd6\x22\x02\x96\x08\xd5\x9b\x49\x5f\x57\x04\xad\x0a\xa5\x8b\x60\xc0\x0b\x69\x39\x06\xab\xf8\x41\xbe\x4e\x4c\x81\x02\x4c\x1a\x73\x64\x5c\x3c\xf3\x42\x5a\xdb\x8f\xfe\xdc\xfd\x83\x85\x92\x2b\xf1\x8b\xdc\x38\x26\xfa\xfd\x0f\x78\x41\xbe\x0d\xf9\x10\x46\x84\x43\x0a\x41\x61\x6c\xb8\x0b\x06\x76\xdf\x9a\x3f\x21\x27\xcf\xe0\x5e\x35\x78\xff\xc6\x83\xad\x7b\xb2\xc5\xad\xf5\xb1\xf2\x6e\x8b\x4c\xb8\x67\x1d\x1a\x48\x8e\x28\x3c\x71\x73\x6e\x71\xe4\x2a\x1c\x02\xd8\x24\x8d\x3b\x3c\x1e\xd1\xac\x92\xb9\x5a\x6c\x08\x84\x54\xaa\xdc\x58\x27\xed\x5a\xe5\x92\x34\x82\x82\xc1\x60\x56\x3f\xbb\x8d\xf3\xb2\x04\xe7\x17\x95\x5b\xd3\xfa\xe7\x4c\x0a\xb2\xc1\x80\x17\x23\x6a\x3e\xe1\xe1\x39\x1a\xe7\x9d\x5c\x55\x9d\xf3\xa1\x2e\x9f\x21\xaa\x59\x50\x0b\x73\x58\xe4\x4a\xae\xa5\x60\xec\x6e\x48\xef\x82\x41\xd8\x4e\x93\x49\xe6\xa5\xce\x37\xac\x4a\xdb\x7e\xac\x47\x8a\xa6\xbf\x53\x18\x3a\x05\x26\x49\xc4\x57\x20\x6e\xb3\x43\x91\xc5\xf0\x58\xc0\x59\x5d\x96\x99\xdd\x7c\x12\xb0\xb5\xfe\xef\x04\x6c\x0f\x7d\x70\x24\x77\x24\x67\x6a\x7c\xb6\x22\x51\xdb\xa6\xdb\x7a\xb2\x2a\xcd\xa9\xbc\x87\xc6\x47\xf2\x76\x8d\x7b\x2d\xc4\x99\xd9\x8d\x67\x74\xd6\x02\x5a\xb8\x06\xba\xff\xda\x47\xfd\xaa\xac\x24\x94\xcd\x6e\xfc\x12\x1d\x4d\xa8\x02\xeb\x69\xe1\x5d\x67\x96\xdc\x3a\x3f\x35\xb8\x67\xfb\x73\xe3\xea\xc3\x7f\x45\xad\x0c\xdb\x5d\x67\x68\x2f\xdf\x17\x25\xc4\x4a\xbe\x66\x56\x6e\xf7\xb7\x70\xc8\x84\xbb\x83\x84\x59\xe9\x33\x49\x7b\xd3\x78\x3f\x99\x3f\x28\xbb\xbd\xce\x02\xb6\x87\x1d\x3c\xa4\x7e\x39\x3e\x32\x59\x66\x1a\x01\x27\x0e\xc9\x6d\xda\x1b\x88\x4d\xef\xe1\xa8\xb8\xbb\xa8\x1f\x06\x11\x97\xb1\xcc\x5e\x4e\x05\x77\x8f\x11\xb6\xb9\x60\x9c\x40\xfd\xc4\x29\x64\xfb\x2a\x63\x0c\x12\x03\xa6\x7b\x21\xc1\xd2\xd4\x96\x73\x88\xef\x9a\x2c\xa3\x30\x39\x62\xf8\x1b\x6a\xbf\x4a\x9b\x67\x8e\xd9\x30\x8a\xce\x1e\xe8\xe2\x88\xac\x7b\x67\x40\x8d\xde\x5d\xda\x03\x6c\x74\xc1\x21\xf3\xb6\xa0\xd2\xc6\x18\x9a\x51\x58\xba\x82\x07\xde\x5d\x9a\x3e\xf1\x6f\x26\x84\xbd\xc2\x02\x93\xf4\x16\xff\x07\xe8\x75\x14\x7e\x9d\x9f\xc8\xb2\xae\xaa\xf7\x2c\xe7\x5f\xa7\x93\xf0\x24\x39\xc6\x28\x1f\x81\xb3\x9c\x60\x26\x48\x7d\xad\x45\xa3\x79\x84\x99\x1d\xcf\x2a\x8c\x5d\xbf\x88\xc2\xd1\x77\xee\xbf\x6e\xf9\xf4\x38\x4d\xb1\xe7\x90\xb4\x5a\xb5\xdf\x01\x1a\xe0\x9f\x00\x00\x00\xff\xff\x15\xf9\x66\x05\x6a\x09\x00\x00")

func templatesSrvMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSrvMainTmpl,
		"templates/srv-main.tmpl",
	)
}

func templatesSrvMainTmpl() (*asset, error) {
	bytes, err := templatesSrvMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/srv-main.tmpl", size: 2410, mode: os.FileMode(420), modTime: time.Unix(1460569307, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTransportTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x5f\x4f\xdb\x3e\x14\x7d\x8e\x3f\xc5\xfd\xe5\xe1\x27\x1b\x81\xf3\xce\x84\x34\x46\xb3\x09\x09\x15\x04\x95\xf6\x4a\x96\x9a\xe0\xd1\xd8\x99\xe3\xf4\xcf\xaa\x7c\xf7\x5d\x27\x76\x97\x40\x8a\xc4\x2c\x55\xad\xaf\xcf\xfd\x73\xce\xb1\x9b\x24\x70\xf2\x91\x45\x30\xe1\x5b\x3a\x4f\xef\x2f\x17\xe9\x0c\xbe\x5e\xdf\xa4\x70\x76\x06\xb3\x5b\x98\xdf\x2e\x20\x9d\x5d\x2f\xe0\xee\x26\xbd\x7c\x48\x1d\xee\x33\xec\xf7\x60\x65\x29\x6a\x9b\x95\x15\xb4\xad\x0b\xde\x65\x26\x2b\x85\x15\x46\xfe\x16\x4b\xd8\x48\xfb\x7c\x8e\x61\x77\x92\xaa\x65\xa5\xa5\xb2\x73\x3c\x87\x0b\x97\xcb\x47\xa1\x3e\xff\x5e\xfc\x6a\xb0\xe0\x00\x34\x8c\x8c\x30\x8b\x5d\xf5\x0a\xd3\x45\x02\xa6\xae\xb4\xaa\xc5\xa8\xd0\x20\x34\x46\x8d\x4a\x0d\x42\x3d\xea\x63\x0a\x92\x2a\xcb\x5f\xb2\x42\x40\x99\x49\x45\x88\x2c\x2b\x6d\x2c\x50\x12\xc5\x42\xe5\x7a\x29\x55\x91\xfc\xac\xb5\x8a\x31\xa0\x84\x4d\x9e\xad\xad\x62\x82\x9b\x02\xb5\x6a\x7e\xf0\x5c\x97\x49\xa1\xcf\x5e\xa4\x4d\xdc\x47\x78\x89\x1c\xbc\xd0\xab\x4c\x15\x5c\x9b\x22\xd9\x26\x2e\x37\xd7\xca\x8a\x2d\x9e\x31\x32\xd0\x85\x58\x37\xfa\x84\xbe\xfe\x1c\x6a\x6b\x9a\xdc\xc2\x9e\xc0\x84\xc0\x13\x7a\xc2\xa3\x1b\xf8\x3c\x7e\x0b\x8e\x1f\x49\x4b\x86\x42\xbe\xd3\xbb\x07\xbc\x6d\x3e\x32\x65\xca\x82\x71\xfb\x11\x1c\xfb\x47\xa9\x31\x80\x0b\xeb\xa2\xb4\x30\x58\x3e\x4d\x18\x73\xaa\x4b\x69\x45\x59\xd9\xdd\x61\xe0\x30\x1e\xad\x19\x79\x6a\x54\x8e\x6e\xbd\x88\x89\xb9\xff\xe2\xd6\xf9\x14\xaf\x07\x61\xd6\x32\x17\x0c\x82\x51\x07\x00\x52\x8c\x8c\xb0\x8d\x51\xe0\x1a\xd0\xdc\x6e\xc1\x1b\xc6\xaf\xfa\xef\x53\x30\xde\x12\xc4\x0b\xf3\x94\xe5\x62\xdf\x32\xa0\x83\xdd\x29\xe0\xfc\xda\xb0\x4e\x30\x44\xc3\xf9\x45\x48\xe2\xf4\xb8\xc7\x0c\xd1\x75\x3f\xda\x6d\x63\xab\xc6\x76\x75\x5c\x32\xf2\xe0\x57\xd9\x6a\x35\x91\x4b\xb1\x30\x7f\x65\x72\xdb\x32\x12\x45\xf2\xa9\x4b\xff\xef\x02\x94\x5c\x75\xa3\xb8\xe5\xd9\xbd\xe3\xf6\x7e\x62\x08\x9e\x3a\x42\x94\x01\x72\xc3\x6a\x58\xbd\x25\xff\x58\x2d\x8e\x0f\x45\x5a\xef\xeb\x4c\xe0\x1b\x13\x87\xa7\xd0\x59\xbb\xec\x62\xc7\xc5\xa2\x06\x4e\xdc\x33\x0c\xbc\x8f\x3a\xb0\xce\xcc\xc1\xb1\xe3\xe5\x48\x90\x0b\xd5\x76\x57\x90\xcf\xc5\xa6\x1f\xcb\x50\xc3\xbf\xe8\xe5\x8e\xf1\x7e\x4f\xff\xf7\xd5\xd8\xa7\xb1\xbe\x51\xb8\x39\xb8\xed\xfa\x3b\x82\x21\xe6\x73\x7a\xe2\xe1\x36\x7b\xd6\xfe\x15\x76\xb4\xbb\xbf\x1b\x11\x62\x74\x03\x9e\x63\xbf\xff\x6e\xf0\x49\x18\x77\x03\xfd\xc3\x1c\x5d\xc1\x8e\xf2\xe0\x06\x07\x1e\x7d\x23\x43\x37\x8c\xf7\x3f\x69\xc8\x67\x6e\x94\x3f\x01\x00\x00\xff\xff\xe8\xc3\x93\x71\x6f\x06\x00\x00")

func templatesTransportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTransportTmpl,
		"templates/transport.tmpl",
	)
}

func templatesTransportTmpl() (*asset, error) {
	bytes, err := templatesTransportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/transport.tmpl", size: 1647, mode: os.FileMode(420), modTime: time.Unix(1460304996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.tmpl": templatesDockerfileTmpl,
	"templates/instrumentation.tmpl": templatesInstrumentationTmpl,
	"templates/logging.tmpl": templatesLoggingTmpl,
	"templates/service.tmpl": templatesServiceTmpl,
	"templates/srv-main.tmpl": templatesSrvMainTmpl,
	"templates/transport.tmpl": templatesTransportTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.tmpl": &bintree{templatesDockerfileTmpl, map[string]*bintree{}},
		"instrumentation.tmpl": &bintree{templatesInstrumentationTmpl, map[string]*bintree{}},
		"logging.tmpl": &bintree{templatesLoggingTmpl, map[string]*bintree{}},
		"service.tmpl": &bintree{templatesServiceTmpl, map[string]*bintree{}},
		"srv-main.tmpl": &bintree{templatesSrvMainTmpl, map[string]*bintree{}},
		"transport.tmpl": &bintree{templatesTransportTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

